name: "make-release"

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Release type"
        required: true
        type: choice
        options:
        - "patch"
        - "minor"
        - "major"
        default: "patch"

concurrency:
  group: "make-release-${{ github.ref }}"
  cancel-in-progress: true

jobs:

  make-release:

    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:

#region Setup

    - id: checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: fregante/setup-git-user@v2

    - id: increment-version
      uses: reecetech/version-increment@2023.4.1
      with:
        scheme: semver
        increment: ${{ inputs.release_type }}

    - run: git checkout -b "release/${{ steps.increment-version.outputs.version }}"

#endregion

#region Increment mod version

    - uses: Mudlet/xmlstarlet-action@v1.1
      with:
        args: ed -P -O -L --update "/ModMetaData/modVersion" -v "${{ steps.increment-version.outputs.version }}" "About/About.xml"

    - run: git add "About/About.xml"
    - run: git commit -m "Increment modVersion to ${{ steps.increment-version.outputs.version }}"

#endregion

#region Push release branch to origin

    - run: git push --set-upstream origin "release/${{ steps.increment-version.outputs.version }}"

#endregion

#region Create and merge pull request

    - id: create-pull-request
      run: gh pr create --title "Release ${{ steps.increment-version.outputs.version }}" --body "" --label "release"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - run: gh pr merge --merge --delete-branch --subject "Merge branch release/${{ steps.increment-version.outputs.version }}"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#endregion

#region Create and push release tag

    - run: git tag ${{ steps.increment-version.outputs.version }}
    - run: git push origin ${{ steps.increment-version.outputs.version }}

#endregion

#region Create release

    - id: generate-changelog
      uses: mikepenz/release-changelog-builder-action@v4
      with:
        configuration: ".github/workflows/configurations/release-changelog-builder.json"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - run: zip -r "${{ vars.MOD_NAME }}-${{ steps.increment-version.outputs.version }}.zip" ${{ vars.ZIP_CONTENTS }}

    - uses: ncipollo/release-action@v1.12.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        artifactErrorsFailBuild: true
        tag: ${{ steps.increment-version.outputs.version }}
        makeLatest: true
        body: ${{ steps.generate-changelog.outputs.changelog }}
        artifacts: "${{ vars.MOD_NAME }}-${{ steps.increment-version.outputs.version }}.zip"

#endregion
